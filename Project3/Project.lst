Microsoft (R) Macro Assembler Version 14.29.30147.0	    02/12/23 21:20:03
.Sum, Min, Max & Average     (Proj3_loyami.asm		     Page 1 - 1


				TITLE Sum, Min, Max & Average     (Proj3_loyami.asm)

				; Author: Michelle Loya
				; Last Modified: 2023
				; OSU email address: loyami@oregonstate.edu
				; Course number/section: CS271 Section 400
				; Project Number:  3               Due Date: 2/12/2023
				; Description: This program will calculate the sum, min, max and average of a set of numbers inputted by
				; the user.

				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

 =-000000C8			RANGE_1_MIN = -200
 =-00000064			RANGE_1_MAX = -100
 =-00000032			RANGE_2_MIN = -50
 =-00000001			RANGE_2_MAX = -1

 00000000			.data

 00000000 53 75 6D 2C 20	programTitle	BYTE	"Sum, Min, Max & Average by Michelle Loya",13,10,13,10,0
	   4D 69 6E 2C 20
	   4D 61 78 20 26
	   20 41 76 65 72
	   61 67 65 20 62
	   79 20 4D 69 63
	   68 65 6C 6C 65
	   20 4C 6F 79 61
	   0D 0A 0D 0A 00
 0000002D 57 68 61 74 27	greeting_1		BYTE	"What's your name? ", 0
	   73 20 79 6F 75
	   72 20 6E 61 6D
	   65 3F 20 00
 00000040  00000021 [		userName		BYTE	33 DUP(0)
	    00
	   ]
 00000061 0D 0A 4E 69 63	greeting_2		BYTE	13,10,"Nice to meet you, ",0
	   65 20 74 6F 20
	   6D 65 65 74 20
	   79 6F 75 2C 20
	   00

 00000076 54 68 69 73 20	instruction_1	BYTE	"This program will calculate the sum, min, max and average of a set of numbers",13,10,
	   70 72 6F 67 72
	   61 6D 20 77 69
	   6C 6C 20 63 61
	   6C 63 75 6C 61
	   74 65 20 74 68
	   65 20 73 75 6D
	   2C 20 6D 69 6E
	   2C 20 6D 61 78
	   20 61 6E 64 20
	   61 76 65 72 61
	   67 65 20 6F 66
	   20 61 20 73 65
	   74 20 6F 66 20
	   6E 75 6D 62 65
	   72 73 0D 0A 69
	   6E 70 75 74 74
	   65 64 20 62 79
	   20 79 6F 75 2C
	   20 74 68 65 20
	   75 73 65 72 2E
	   20 54 68 65 20
	   76 61 6C 75 65
	   73 20 74 68 61
	   74 20 79 6F 75
	   20 63 68 6F 6F
	   73 65 20 6D 75
	   73 74 20 62 65
	   20 77 69 74 68
	   69 6E 20 74 68
	   65 20 72 61 6E
	   67 65 20 0D 0A
	   6F 66 20 5B 00
										"inputted by you, the user. The values that you choose must be within the range ",13,10,
										"of [",0	
 0000011B 5D 20 6F 72 20	instruction_2	BYTE	"] or [",0
	   5B 00
 00000122 5D 2E 20 54 6F	instruction_3	BYTE	"]. To conclude your list, enter a positive value.",13,10,13,10,0
	   20 63 6F 6E 63
	   6C 75 64 65 20
	   79 6F 75 72 20
	   6C 69 73 74 2C
	   20 65 6E 74 65
	   72 20 61 20 70
	   6F 73 69 74 69
	   76 65 20 76 61
	   6C 75 65 2E 0D
	   0A 0D 0A 00
 00000158 2C 20 00		comma			BYTE	", ",0

 0000015B 45 6E 74 65 72	prompt			BYTE	"Enter a value: ",0
	   20 61 20 76 61
	   6C 75 65 3A 20
	   00
 0000016B 54 68 69 73 20	invalid			BYTE	"This number is not within the acceptable range!",13,10,0
	   6E 75 6D 62 65
	   72 20 69 73 20
	   6E 6F 74 20 77
	   69 74 68 69 6E
	   20 74 68 65 20
	   61 63 63 65 70
	   74 61 62 6C 65
	   20 72 61 6E 67
	   65 21 0D 0A 00

 0000019D FFFFFFFF		min				SDWORD	RANGE_2_MAX
 000001A1 FFFFFF38		max				SDWORD	RANGE_1_MIN
 000001A5 00000000		count			SDWORD	0
 000001A9 00000000		sum				SDWORD	?
 000001AD 00000000		average			SDWORD	?
 000001B1 00000000		remainder		SDWORD	?
 000001B5 00000002		two				SDWORD	2

 000001B9 0D 0A 59 6F 75	result_count_1	BYTE	13,10,"You entered ",0
	   20 65 6E 74 65
	   72 65 64 20 00
 000001C8 20 76 61 6C 69	result_count_2	BYTE	" valid numbers.",13,10,0
	   64 20 6E 75 6D
	   62 65 72 73 2E
	   0D 0A 00
 000001DA 0D 0A 4D 61 78	result_max		BYTE	13,10,"Maximum: ",0
	   69 6D 75 6D 3A
	   20 00
 000001E6 0D 0A 4D 69 6E	result_min		BYTE	13,10,"Minimum: ",0
	   69 6D 75 6D 3A
	   20 00
 000001F2 0D 0A 53 75 6D	result_sum		BYTE	13,10,"Sum: ",0
	   3A 20 00
 000001FA 0D 0A 52 6F 75	result_avg		BYTE	13,10,"Rounded Average: ",0
	   6E 64 65 64 20
	   41 76 65 72 61
	   67 65 3A 20 00

 0000020E 0D 0A 59 6F 75	no_inputs		BYTE	13,10,"You did not input any valid numbers!",13,10,0
	   20 64 69 64 20
	   6E 6F 74 20 69
	   6E 70 75 74 20
	   61 6E 79 20 76
	   61 6C 69 64 20
	   6E 75 6D 62 65
	   72 73 21 0D 0A
	   00
 00000237 0D 0A 53 65 65	goodbye			BYTE	13,10,"See yah later!!",13,10,0
	   20 79 61 68 20
	   6C 61 74 65 72
	   21 21 0D 0A 00

 00000000			.code
 00000000			main PROC

				;Display program title
 00000000  BA 00000000 R		mov		EDX, OFFSET programTitle
 00000005  E8 00000000 E		call	WriteString

				;Greet user
 0000000A  BA 0000002D R		mov		edx, OFFSET greeting_1
 0000000F  E8 00000000 E		call	WriteString
 00000014  BA 00000040 R		mov		edx, OFFSET userName
 00000019  B9 00000020			mov		ecx, 32
 0000001E  E8 00000000 E		call	ReadString
 00000023  BA 00000061 R		mov		edx, OFFSET greeting_2
 00000028  E8 00000000 E		call	WriteString
 0000002D  BA 00000040 R		mov		edx, OFFSET userName
 00000032  E8 00000000 E		call	WriteString
 00000037  E8 00000000 E		call	CrLf
 0000003C  E8 00000000 E		call	CrLf

				;Display instructions
 00000041  BA 00000076 R		mov		EDX, OFFSET instruction_1
 00000046  E8 00000000 E		call	WriteString					;Display: "This program will calculate... of ["
 0000004B  B8 FFFFFF38			mov		EAX, RANGE_1_MIN
 00000050  E8 00000000 E		call	WriteInt					;Display: RANGE_1_MIN
 00000055  BA 00000158 R		mov		EDX, OFFSET comma
 0000005A  E8 00000000 E		call	WriteString					;Display: ", "
 0000005F  B8 FFFFFF9C			mov		EAX, RANGE_1_MAX
 00000064  E8 00000000 E		call	WriteInt					;Display: RANGE_1_MAX
 00000069  BA 0000011B R		mov		EDX, OFFSET instruction_2
 0000006E  E8 00000000 E		call	WriteString					;Display: "] or ["
 00000073  B8 FFFFFFCE			mov		EAX, RANGE_2_MIN
 00000078  E8 00000000 E		call	WriteInt					;Display: RANGE_2_MIN
 0000007D  BA 00000158 R		mov		EDX, OFFSET comma
 00000082  E8 00000000 E		call	WriteString					;Display: ", "
 00000087  B8 FFFFFFFF			mov		EAX, RANGE_2_MAX
 0000008C  E8 00000000 E		call	WriteInt					;Display: RANGE_2_MAX
 00000091  BA 00000122 R		mov		EDX, OFFSET instruction_3
 00000096  E8 00000000 E		call	WriteString					;Display: "]. To conclude your list, enter a positive value."

				;Assess user input
 0000009B				_prompt_input:
 0000009B  BA 0000015B R		mov		EDX, OFFSET prompt
 000000A0  E8 00000000 E		call	WriteString					;"Enter a value: "
 000000A5  E8 00000000 E		call	ReadInt        

 000000AA  79 53			JNS		_results					;will continue to results if input is nonnegative

					;check if user input is valid
 000000AC  3D FFFFFF38			CMP		EAX, RANGE_1_MIN			
 000000B1  7C 13			JL		_invalid					;invalid if: value < RANGE_1_MIN
 000000B3  83 F8 9C			CMP		EAX, RANGE_1_MAX
 000000B6  7F 02			JG		_greater_than_first_range
 000000B8  EB 18			JMP		_valid

 000000BA				_greater_than_first_range:
 000000BA  83 F8 CE			CMP		EAX, RANGE_2_MIN		
 000000BD  7C 07			JL		_invalid					;invalid if: RANGE_1_MIN < value < RANGE_2_MIN
 000000BF  83 F8 FF			CMP		EAX, RANGE_2_MAX
 000000C2  7F 02			JG		_invalid					;invalid if: value > RANGE_2_MAX
 000000C4  EB 0C			JMP		_valid

					;prompt new input if user input is invalid
 000000C6				_invalid:
 000000C6  BA 0000016B R		mov		EDX, OFFSET invalid
 000000CB  E8 00000000 E		call	WriteString   
 000000D0  EB C9			JMP		_prompt_input

 000000D2				_valid:
					;checks if user input is less than all other inputted values
 000000D2  3B 05 0000019D R		CMP		EAX, min			
 000000D8  7C 17			JL		_new_min

					;checks if user input is greater than all other inputted values
 000000DA  3B 05 000001A1 R		CMP		EAX, max			
 000000E0  7F 16			JG		_new_max

					;adds new input to sum calculation
 000000E2  01 05 000001A9 R		ADD		sum, EAX

					;increases count of inputted values
 000000E8  83 05 000001A5 R		ADD		count, 1
	   01

					;prompts user to enter another value
 000000EF  EB AA			JMP		_prompt_input

					;Sets new minimun if user input is less than all other inputted values
 000000F1				_new_min:
 000000F1  A3 0000019D R		mov		min, EAX
 000000F6  EB DA			JMP		_valid

					;Sets new maximum if user input is greater than all other inputted values
 000000F8				_new_max:
 000000F8  A3 000001A1 R		mov		max, EAX
 000000FD  EB D3			JMP		_valid

				;Calculates average and displays sum, min, max & average
 000000FF				_results:
					;Check if user did not input any numbers
 000000FF  83 3D 000001A5 R		CMP		count, 0
	   00
 00000106  75 0F			JNE		_calculations
 00000108  BA 0000020E R		mov		EDX, OFFSET no_inputs
 0000010D  E8 00000000 E		call	WriteString	
 00000112  E9 000000A2			JMP		_goodbye

 00000117				_calculations:
					;Calculate average
 00000117  A1 000001A9 R		MOV		EAX, sum
 0000011C  99				CDQ
 0000011D  F7 3D 000001A5 R		IDIV	count
 00000123  A3 000001AD R		MOV		average, EAX
 00000128  89 15 000001B1 R		MOV		remainder, EDX

 0000012E  A1 000001A5 R		MOV		EAX, count
 00000133  99				CDQ
 00000134  F7 3D 000001B5 R		IDIV	two
					
 0000013A  39 05 000001B1 R		CMP		remainder, EAX
 00000140  7F 02			JG		_round_up
 00000142  EB 07			JMP		_display_results

 00000144				_round_up:
 00000144  83 05 000001AD R		ADD		average, 1
	   01

 0000014B				_display_results:
					;Display results
 0000014B  BA 000001B9 R		mov		EDX, OFFSET result_count_1	;Displays: "You entered "
 00000150  E8 00000000 E		call	WriteString	
 00000155  A1 000001A5 R		mov		EAX, count					;Displays: Count
 0000015A  E8 00000000 E		call	WriteInt
 0000015F  BA 000001C8 R		mov		EDX, OFFSET result_count_2	;Displays: " valid numbers."
 00000164  E8 00000000 E		call	WriteString	

 00000169  BA 000001DA R		mov		EDX, OFFSET result_max		;Displays: "Maximum: "
 0000016E  E8 00000000 E		call	WriteString	
 00000173  A1 000001A1 R		mov		EAX, max					;Displays: Max
 00000178  E8 00000000 E		call	WriteInt

 0000017D  BA 000001E6 R		mov		EDX, OFFSET result_min		;Displays: "Minimum: "
 00000182  E8 00000000 E		call	WriteString	
 00000187  A1 0000019D R		mov		EAX, min					;Displays: Min
 0000018C  E8 00000000 E		call	WriteInt

 00000191  BA 000001F2 R		mov		EDX, OFFSET result_sum		;Displays: "Sum: "
 00000196  E8 00000000 E		call	WriteString	
 0000019B  A1 000001A9 R		mov		EAX, sum					;Displays: sum
 000001A0  E8 00000000 E		call	WriteInt

 000001A5  BA 000001FA R		mov		EDX, OFFSET result_avg		;Displays: "Rounded Average: "
 000001AA  E8 00000000 E		call	WriteString	
 000001AF  A1 000001AD R		mov		EAX, average				;Displays: average
 000001B4  E8 00000000 E		call	WriteInt

 000001B9				_goodbye:
 000001B9  BA 00000237 R		mov		EDX, OFFSET goodbye		;Displays: "See yah later!!"
 000001BE  E8 00000000 E		call	WriteString	

					Invoke ExitProcess,0	; exit to operating system
 000001C3  6A 00	   *	    push   +000000000h
 000001C5  E8 00000000 E   *	    call   ExitProcess
 000001CA			main ENDP

				END main
Microsoft (R) Macro Assembler Version 14.29.30147.0	    02/12/23 21:20:03
.Sum, Min, Max & Average     (Proj3_loyami.asm		     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000024B Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000001CA Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000001CA Public STDCALL
  _prompt_input  . . . . . . . .	L Near	 0000009B _TEXT	
  _greater_than_first_range  . .	L Near	 000000BA _TEXT	
  _invalid . . . . . . . . . . .	L Near	 000000C6 _TEXT	
  _valid . . . . . . . . . . . .	L Near	 000000D2 _TEXT	
  _new_min . . . . . . . . . . .	L Near	 000000F1 _TEXT	
  _new_max . . . . . . . . . . .	L Near	 000000F8 _TEXT	
  _results . . . . . . . . . . .	L Near	 000000FF _TEXT	
  _calculations  . . . . . . . .	L Near	 00000117 _TEXT	
  _round_up  . . . . . . . . . .	L Near	 00000144 _TEXT	
  _display_results . . . . . . .	L Near	 0000014B _TEXT	
  _goodbye . . . . . . . . . . .	L Near	 000001B9 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RANGE_1_MAX  . . . . . . . . . .	Number	 -00000064h   
RANGE_1_MIN  . . . . . . . . . .	Number	 -000000C8h   
RANGE_2_MAX  . . . . . . . . . .	Number	 -00000001h   
RANGE_2_MIN  . . . . . . . . . .	Number	 -00000032h   
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
average  . . . . . . . . . . . .	DWord	 000001AD _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
comma  . . . . . . . . . . . . .	Byte	 00000158 _DATA	
count  . . . . . . . . . . . . .	DWord	 000001A5 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
goodbye  . . . . . . . . . . . .	Byte	 00000237 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
greeting_1 . . . . . . . . . . .	Byte	 0000002D _DATA	
greeting_2 . . . . . . . . . . .	Byte	 00000061 _DATA	
instruction_1  . . . . . . . . .	Byte	 00000076 _DATA	
instruction_2  . . . . . . . . .	Byte	 0000011B _DATA	
instruction_3  . . . . . . . . .	Byte	 00000122 _DATA	
invalid  . . . . . . . . . . . .	Byte	 0000016B _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
max  . . . . . . . . . . . . . .	DWord	 000001A1 _DATA	
min  . . . . . . . . . . . . . .	DWord	 0000019D _DATA	
no_inputs  . . . . . . . . . . .	Byte	 0000020E _DATA	
programTitle . . . . . . . . . .	Byte	 00000000 _DATA	
prompt . . . . . . . . . . . . .	Byte	 0000015B _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
remainder  . . . . . . . . . . .	DWord	 000001B1 _DATA	
result_avg . . . . . . . . . . .	Byte	 000001FA _DATA	
result_count_1 . . . . . . . . .	Byte	 000001B9 _DATA	
result_count_2 . . . . . . . . .	Byte	 000001C8 _DATA	
result_max . . . . . . . . . . .	Byte	 000001DA _DATA	
result_min . . . . . . . . . . .	Byte	 000001E6 _DATA	
result_sum . . . . . . . . . . .	Byte	 000001F2 _DATA	
sum  . . . . . . . . . . . . . .	DWord	 000001A9 _DATA	
two  . . . . . . . . . . . . . .	DWord	 000001B5 _DATA	
userName . . . . . . . . . . . .	Byte	 00000040 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
